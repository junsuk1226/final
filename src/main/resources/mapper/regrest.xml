<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.kdt.finalproject.mapper.RegRestMapper">

<select id="getRegRest" parameterType="String" resultType="com.kdt.finalproject.vo.RegRestVO">
  	SELECT * FROM regrest WHERE reg_status = 0 and reg_restNm = #{RestNm}
</select>

<!-- 휴게소 검색 -->
<select id="getRestInfo" resultType="com.kdt.finalproject.vo.MemVO" parameterType="String">
  SELECT * FROM member
  WHERE m_id = #{m_id}
</select>

<!-- 가입신청한 휴게소 정보 가져오기 -->
<select id="regList" resultType="com.kdt.finalproject.vo.MemVO">
  SELECT * FROM member
  WHERE m_status = 3
</select>


<!-- 승인시 status값 변경 -->
<update id="approval" parameterType="String">
  UPDATE final.member
  SET m_status = 1
  WHERE m_id = #{m_id}
</update>

<insert id="addLog" parameterType="Map">
  INSERT INTO memberlog (m_id, m_pw, m_name, m_joinDate, m_editDate, m_status, m_phone, restCd, m_idx, editor)
  VALUES (#{m_id}, #{m_pw}, #{m_name}, #{m_joinDate}, NOW(), #{m_status}, #{m_phone}, #{restCd}, #{m_idx}, 'A')
</insert>

<insert id="addRegRest" parameterType="Map">
  INSERT INTO regrest (reg_restNm, reg_restCd, reg_addr, reg_phone, reg_joinDate, reg_status, reg_ownerPhone, reg_ownerEmail, m_idx)
  VALUES (#{reg_restNm}, #{reg_restCd}, #{reg_addr}, #{reg_phone}, NOW(), 0, #{reg_ownerPhone}, #{reg_ownerEmail}, #{m_idx})
</insert>

<insert id="insertMenuData" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="f_idx">
  INSERT INTO food (foodCost, foodNm, foodMaterial, etc, stdRestNm, bestfoodyn, premiumyn, recommendyn, seasonMenu, seq, f_status)
  VALUES
  <foreach collection="f_list" item="vo" separator=",">
    (#{vo.foodCost}, #{vo.foodNm}, #{vo.foodMaterial}, #{vo.etc}, #{vo.stdRestNm}, #{vo.bestfoodyn}, #{vo.premiumyn}, #{vo.recommendyn}, #{vo.seasonMenu}, #{vo.seq}, 0)
  </foreach>
</insert>

<insert id="insertMenuDataLog" parameterType="java.util.List">
  INSERT INTO foodlog (foodCost, foodNm, foodMaterial, etc, stdRestNm, bestfoodyn, premiumyn, recommendyn, seasonMenu, seq, editDate, f_idx, f_status)
  VALUES
  <foreach collection="f_list" item="vo" separator=",">
    (#{vo.foodCost}, #{vo.foodNm}, #{vo.foodMaterial}, #{vo.etc}, #{vo.stdRestNm}, #{vo.bestfoodyn}, #{vo.premiumyn}, #{vo.recommendyn}, #{vo.seasonMenu}, #{vo.seq},NOW(), #{vo.f_idx}, 0)
  </foreach>
</insert>

<!-- 승인 -->

<!-- 승인거절시 status값 변경-->
<update id="refuse" parameterType="String">
  UPDATE final.member
  SET m_status = 5
  WHERE m_id = #{m_id}
</update>

<select id="totalCount" resultType="int" parameterType="Map">
  	SELECT COUNT(*) FROM memberlog
    WHERE m_status IN (1, 3, 5)
    <if test="searchType != null and searchType == 0">
      AND m_name LIKE CONCAT('%', #{searchValue}, '%')
    </if>
    <if test="searchType != null and searchType == 1">
      AND m_id LIKE CONCAT('%', #{searchValue}, '%')
    </if>
    <if test="searchType != null and searchType == 2">
      AND m_joinDate LIKE CONCAT('%', #{searchValue}, '%')
    </if>
</select>

<!-- 휴게소 변경 로그 가져오기 -->
<select id="regLogList" resultType="com.kdt.finalproject.vo.MemVO" parameterType="Map">
  SELECT * FROM(
		SELECT @RN:=@RN+1 AS rnum,a.* FROM(
      SELECT * FROM memberlog
      WHERE m_status IN (1, 3, 5)
      <if test="searchType != null and searchType == 0">
				AND m_name LIKE CONCAT('%', #{searchValue}, '%')
			</if>
			<if test="searchType != null and searchType == 1">
				AND m_id LIKE CONCAT('%', #{searchValue}, '%')
			</if>
			<if test="searchType != null and searchType == 2">
				AND m_joinDate LIKE CONCAT('%', #{searchValue}, '%')
			</if>
    ) a, (SELECT @RN:=0) b
	) c WHERE c.rnum BETWEEN #{begin} AND #{end}
</select>

<!-- 가입 되어있는 휴게소 정보 가져오기 -->
<select id="getRegRestList" resultType="com.kdt.finalproject.vo.RegRestVO">
  SELECT * FROM regrest
  WHERE reg_status = 0
</select>

<!-- 가입 되어있는 휴게소 수 -->
<select id="getRegRestCnt" resultType="int">
  SELECT COUNT(*) FROM regrest WHERE reg_status = 0
</select>

<!-- 가입 승인 대기 중 휴게소 수 -->
<select id="waitRegRestCnt" resultType="int">
  SELECT COUNT(*) FROM member WHERE m_status = 3
</select>

</mapper>