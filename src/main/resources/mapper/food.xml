<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.kdt.finalproject.mapper.FoodMapper">

<!--휴게소 관리페이지 판매중인 음식 갯수-->
<select id="getZero" resultType="int" parameterType="String">
  select COUNT(*) from food where f_status='0' and stdRestNm= '${restNm}'
</select>
<!--휴게소 관리페이지 품절인 음식 갯수-->
<select id="getOne" resultType="int" parameterType="String">
  select COUNT(*) from food where f_status='1' and stdRestNm= '${restNm}'
</select>


<!--특정 휴게소 클릭 시 DB에 등록된 모든 음식 호출, 관리자 페이지 메뉴관리에서 메뉴 리스트 호출-->
<select id="getFood" resultType="com.kdt.finalproject.vo.FoodVO" parameterType="String">
  	SELECT * FROM final.food
    WHERE stdRestNm = #{RestNm} and f_status = 0
</select>

<!--특정 음식 클릭 시 음식 정보 호출-->
<select id="getFoodInfo" parameterType="String" resultType="com.kdt.finalproject.vo.FoodVO">
  	SELECT * FROM final.food
    WHERE seq = #{seq}
</select>

<!--음식 이미지 호출-->
<select id="getFood_img" parameterType="String" resultType="com.kdt.finalproject.vo.FoodVO">
  	SELECT * FROM final.food
    WHERE seq = #{seq}
</select> 

<!--메뉴 수정 시 특정 음식에 대한 정보 호출-->
<select id="getOneFood" parameterType="String" resultType="com.kdt.finalproject.vo.FoodVO">
  SELECT * FROM final.food
  WHERE f_idx = #{f_idx}
</select>

<!--관리자 페이지에서 음식 리스트 출력-->
<select id="getFoodList" resultType="com.kdt.finalproject.vo.FoodVO" parameterType="String">
  	SELECT * FROM final.food
    WHERE stdRestNm = #{RestNm} and (f_status = 0 or f_status=1)
</select>

<!--총관리자의 메뉴관리 페이지에서 리스트 출력-->
<select id="getMenuList" resultType="com.kdt.finalproject.vo.FoodVO" parameterType="Map">
  	SELECT * FROM(
      SELECT @RN:=@RN+1 AS rnum,a.* FROM(
        SELECT * FROM final.food
        WHERE f_status = #{f_status}
        <if test="searchType != null and searchType == 0">
          AND foodNm LIKE CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchType != null and searchType == 1">
          AND stdRestNm LIKE CONCAT('%', #{searchValue}, '%')
        </if>
        <if test="searchType != null and searchType == 2">
          AND foodMaterial LIKE CONCAT('%', #{searchValue}, '%')
        </if>
    ) a, (SELECT @RN:=0) b
	) c WHERE c.rnum BETWEEN #{begin} AND #{end}
</select>

<select id="getMenuTotalCount" resultType="int" parameterType="Map">
  	SELECT COUNT(*) FROM final.food
    WHERE f_status = #{f_status}
    <if test="searchType != null and searchType == 0">
      AND foodNm LIKE CONCAT('%', #{searchValue}, '%')
    </if>
    <if test="searchType != null and searchType == 1">
      AND stdRestNm LIKE CONCAT('%', #{searchValue}, '%')
    </if>
    <if test="searchType != null and searchType == 2">
      AND foodMaterial LIKE CONCAT('%', #{searchValue}, '%')
    </if>
</select>

<!--메뉴 수정-->
<update id="editFood" parameterType="com.kdt.finalproject.vo.FoodVO">
  UPDATE food
  	SET 
    foodCost = #{foodCost},
    foodNm = #{foodNm},
    foodMaterial = #{foodMaterial},
    f_status = #{f_status},
    etc = #{etc},
    bestfoodyn = #{bestfoodyn},
    premiumyn = #{premiumyn},
    recommendyn = #{recommendyn}
    <if test="f_image != null">
      , f_image = #{f_image}
    </if>
    WHERE f_idx = #{f_idx}
</update>

<!--메뉴 수정시 로그 기록-->
<insert id="editFoodLog" parameterType="com.kdt.finalproject.vo.FoodVO">
  INSERT INTO final.foodlog (foodCost, foodNm, foodMaterial, f_status, etc, seq, editDate, stdRestNm, f_idx, bestfoodyn, premiumyn, recommendyn)
  VALUES(#{foodCost}, #{foodNm},#{foodMaterial}, #{f_status}, #{etc}, #{seq}, NOW(), #{stdRestNm}, #{f_idx}, #{bestfoodyn}, #{premiumyn}, #{recommendyn})
</insert>

<!-- 메뉴 추가 신청-->
<insert id="addFood" parameterType="com.kdt.finalproject.vo.FoodVO">
  INSERT INTO final.food (foodCost, foodNm, foodMaterial, etc, seq, stdRestNm, bestfoodyn, premiumyn, recommendyn, f_status)
  VALUES(#{foodCost}, #{foodNm},#{foodMaterial}, #{etc}, #{seq}, #{stdRestNm}, #{bestfoodyn}, #{premiumyn}, #{recommendyn}, 3)
</insert>

<insert id="addFoodLog" parameterType="com.kdt.finalproject.vo.FoodVO">
  INSERT INTO foodlog (foodCost, foodNm, foodMaterial, etc, seq, stdRestNm, bestfoodyn, premiumyn, recommendyn, f_status, editDate)
  VALUES(#{foodCost}, #{foodNm},#{foodMaterial}, #{etc}, #{seq}, #{stdRestNm}, #{bestfoodyn}, #{premiumyn}, #{recommendyn}, 3, NOW())
</insert>

</mapper>